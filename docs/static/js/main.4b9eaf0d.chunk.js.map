{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","ctgs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAkCeA,EA/BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAWH,GAD7C,+DAEKI,MAAOF,GAFZ,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCWLO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,2DAAf,UACI,4BAAKJ,IACL,qBAAKK,IAAKf,EAAKgB,IAAKN,QCwBjBO,EAzBQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAW,WACPxB,EAASC,GAEJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAEFqB,EDdwBK,CAAc1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,qDAAd,SAAqEhB,IACnEoB,GAAW,mBAAGJ,UAAU,qDAAb,yBACb,qBAAKA,UAAU,YAAf,SAKQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEYvBgB,EA3BM,WAAM,MAGazC,mBAAS,CAAC,kBAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KASvB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAG3B2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADPA,UClB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4b9eaf0d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value );\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if( inputValue.trim().length > 2){\n            setCategories( ctgs => [inputValue, ...ctgs]); // Se llama con un callback que tiene el estado anterior\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value = { inputValue }\n                onChange={ handleInputChange } \n            />  \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;\n","export const getGifs = async(category) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=z8L84cRhMVVOIbQuduH0R8OxY88PESaX`;\n    const respuesta = await fetch( url );\n    const { data } = await respuesta.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url, //Se pone el signo de interrogacion para asegurar que viene la informacion, y lo utiliza\n        }\n        \n    });\n\n    return gifs;\n}\n","import React from 'react'\n\nconst GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\n            <p >{title}</p>\n            <img src={url} alt={title}/>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__flash animate__delay-1s'>{ category }</h3>\n            { loading && <p className='animate__animated animate__flash animate__delay-1s'>Cargando...</p>}\n            <div className='card-grid'>\n                {\n                    //    images.map(\n                    //    img => <li key={img.id}> {img.title}</li>\n                    //    )\n                    images.map( (img) =>\n                        <GifGridItem \n                            key={ img.id }\n                            {...img }\n                        />\n                    )\n                } \n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    \n    useEffect( () => {\n        getGifs( category )\n            // .then( imgs => setImages(imgs) )\n            .then( imgs => {\n                setState({ \n                    data: imgs,\n                    loading: false\n                })\n            } )\n        }, [ category ]);\n\n    return state; // { data: [], loading: true }\n}","import React, { useState } from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Punch Man', 'Dragon ball', 'Attack of titans'];\n    const [categories, setCategories] = useState(['One Punch Man']);\n\n    // const handleAdd = () =>Â {\n    //     // setCategories( [...categories, 'Naruto ']);\n    //     setCategories( ctgs => [...ctgs, 'Naruto'] );\n    // }\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <hr></hr>\n            <AddCategory setCategories = { setCategories } />\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n            {\n                categories.map( category =>\n                    <GifGrid \n                        key={category} \n                        category ={ category }\n                    />\n                )\n            }\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp'\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}